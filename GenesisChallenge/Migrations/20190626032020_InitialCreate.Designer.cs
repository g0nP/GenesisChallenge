// <auto-generated />
using System;
using GenesisChallenge.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GenesisChallenge.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    [Migration("20190626032020_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GenesisChallenge.Domain.Models.Telephone", b =>
                {
                    b.Property<int>("TelephoneId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Number");

                    b.Property<Guid?>("UserId");

                    b.HasKey("TelephoneId");

                    b.HasIndex("UserId");

                    b.ToTable("Telephones");
                });

            modelBuilder.Entity("GenesisChallenge.Domain.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationOn");

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<DateTime>("LastLoginOn");

                    b.Property<DateTime>("LastUpdatedOn");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("Password")
                        .IsRequired();

                    b.Property<string>("Token")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("GenesisChallenge.Domain.Models.Telephone", b =>
                {
                    b.HasOne("GenesisChallenge.Domain.Models.User")
                        .WithMany("Telephones")
                        .HasForeignKey("UserId");
                });
#pragma warning restore 612, 618
        }
    }
}
